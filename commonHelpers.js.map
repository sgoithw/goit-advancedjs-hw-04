{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabayApi.js","../src/js/index.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '42188159-1454a2852e4ff5c9e0320bde0';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nfunction searchImages({ query, page = 1, per_page = 40 }) {\n  const apiQuery = new URLSearchParams({\n    q: query,\n    page,\n    key: API_KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  });\n\n  return axios.get(`${BASE_URL}?${apiQuery}`);\n}\n\nexport { searchImages };\n","import iziToast from 'izitoast';\nimport simpleLightbox from 'simplelightbox';\nimport { searchImages } from './pixabayApi';\n\nimport 'modern-normalize/modern-normalize.css';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport '../css/style.css';\n\nconst elements = {\n  searchForm: document.querySelector('#search-form'),\n  gallery: document.querySelector('#gallery'),\n  galleryEnd: document.querySelector('#gallery-end'),\n};\n\nconst lightbox = new simpleLightbox('.photo-card', {\n  captionsData: 'alt',\n  sourceAttr: 'data-image',\n  captionDelay: 250,\n});\n\nconst observer = new IntersectionObserver(\n  (entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        handleOsbserverIntersect(observer);\n      }\n    });\n  },\n  { rootMargin: '150px' }\n);\n\nconst perPage = 40;\n\nlet currentPage = 1;\n\nelements.searchForm.addEventListener('submit', handleSearchFormSubmit);\n\n/**\n * Handles the search form submit event.\n * @param {*} event\n */\nasync function handleSearchFormSubmit(event) {\n  event.preventDefault();\n  try {\n    clearGallery();\n    const result = await renderGallery();\n    if (result.totalHits !== 0) {\n      iziToast.success({\n        title: 'Success',\n        position: 'topRight',\n        message: `Hooray! We found ${result.totalHits} images.`,\n      });\n    } else {\n      iziToast.info({\n        title: 'Info',\n        position: 'topRight',\n        message:\n          'Sorry, there are no images matching your search query. Please try again.',\n      });\n    }\n    if (result.totalHits > perPage) {\n      observer.observe(elements.galleryEnd);\n    }\n  } catch (error) {\n    showErrorMessage(error);\n  }\n}\n\n/**\n * Handles the observer intersect event.\n * Loads more images if the observer intersects.\n * @param {*} observer\n */\nasync function handleOsbserverIntersect(observer) {\n  try {\n    const res = await renderGallery(++currentPage);\n    if (res.totalHits <= currentPage * perPage) {\n      observer.unobserve(elements.galleryEnd);\n      iziToast.info({\n        title: 'Info',\n        position: 'topRight',\n        message: \"We're sorry, but you've reached the end of search results.\",\n      });\n    }\n  } catch (error) {\n    showErrorMessage(error);\n  }\n}\n\n/**\n * Loads the images and renders the gallery.\n * @param {*} page\n */\nasync function renderGallery(page = 1) {\n  currentPage = page;\n  const { data: response } = await searchImages(getQuery(page));\n  if (response.hits.length > 0) {\n    renderImages(response.hits);\n    refreshSimpleLightbox();\n  }\n  return response;\n}\n\n/**\n * Refreshes the simple lightbox.\n */\nfunction refreshSimpleLightbox() {\n  lightbox.refresh();\n}\n\n/**\n * Shows loaded the images.\n *\n * @param {*} images\n */\nfunction renderImages(images) {\n  elements.gallery.insertAdjacentHTML(\n    'beforeend',\n    images.map(getImageCardHTML).join('')\n  );\n}\n\n/**\n * Removes all loaded images.\n * @returns {void}\n * */\nfunction clearGallery() {\n  elements.gallery.innerHTML = '';\n  observer.unobserve(elements.galleryEnd);\n}\n\n/**\n * Returns image query parameters.\n * @param {number} page - The page number.\n * @returns {Object} - The image query parameters.\n */\nfunction getQuery(page = 1) {\n  return {\n    query: elements.searchForm.elements.searchQuery.value,\n    page,\n    per_page: perPage,\n  };\n}\n\n/**\n * Displays an error message.\n * @param {*} error\n */\nfunction showErrorMessage(error) {\n  console.log(error);\n  iziToast.error({\n    title: 'Error',\n    position: 'topRight',\n    message: error.message,\n  });\n}\n\n/**\n * Returns the image card HTML.\n * @param {Object} image - The image object.\n * @returns {string} - The image card HTML.\n */\nfunction getImageCardHTML({\n  webformatURL,\n  largeImageURL,\n  tags,\n  likes,\n  views,\n  comments,\n  downloads,\n}) {\n  return `\n    <div class=\"photo-card\" data-image=\"${largeImageURL}\">\n        <img class=\"photo-card-image\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n        <div class=\"info\">\n            <p class=\"info-item\">\n                <b>Likes</b><br>${likes}\n            </p>\n                <p class=\"info-item\">\n            <b>Views</b><br>${views}\n            </p>\n            <p class=\"info-item\">\n                <b>Comments</b><br>${comments}\n            </p>\n            <p class=\"info-item\">\n                <b>Downloads</b><br>${downloads}\n            </p>\n        </div>\n    </div>`;\n}\n"],"names":["API_KEY","BASE_URL","searchImages","query","page","per_page","apiQuery","axios","elements","lightbox","simpleLightbox","observer","entries","entry","handleOsbserverIntersect","perPage","currentPage","handleSearchFormSubmit","event","clearGallery","result","renderGallery","iziToast","error","showErrorMessage","response","getQuery","renderImages","refreshSimpleLightbox","images","getImageCardHTML","webformatURL","largeImageURL","tags","likes","views","comments","downloads"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEjB,SAASC,EAAa,CAAE,MAAAC,EAAO,KAAAC,EAAO,EAAG,SAAAC,EAAW,IAAM,CACxD,MAAMC,EAAW,IAAI,gBAAgB,CACnC,EAAGH,EACH,KAAAC,EACA,IAAKJ,EACL,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,CAAG,EAED,OAAOO,EAAM,IAAI,GAAGN,KAAYK,GAAU,CAC5C,CCNA,MAAME,EAAW,CACf,WAAY,SAAS,cAAc,cAAc,EACjD,QAAS,SAAS,cAAc,UAAU,EAC1C,WAAY,SAAS,cAAc,cAAc,CACnD,EAEMC,EAAW,IAAIC,EAAe,cAAe,CACjD,aAAc,MACd,WAAY,aACZ,aAAc,GAChB,CAAC,EAEKC,EAAW,IAAI,qBACnB,CAACC,EAASD,IAAa,CACrBC,EAAQ,QAAQC,GAAS,CACnBA,EAAM,gBACRC,EAAyBH,CAAQ,CAEzC,CAAK,CACF,EACD,CAAE,WAAY,OAAS,CACzB,EAEMI,EAAU,GAEhB,IAAIC,EAAc,EAElBR,EAAS,WAAW,iBAAiB,SAAUS,CAAsB,EAMrE,eAAeA,EAAuBC,EAAO,CAC3CA,EAAM,eAAc,EACpB,GAAI,CACFC,IACA,MAAMC,EAAS,MAAMC,IACjBD,EAAO,YAAc,EACvBE,EAAS,QAAQ,CACf,MAAO,UACP,SAAU,WACV,QAAS,oBAAoBF,EAAO,mBAC5C,CAAO,EAEDE,EAAS,KAAK,CACZ,MAAO,OACP,SAAU,WACV,QACE,0EACV,CAAO,EAECF,EAAO,UAAYL,GACrBJ,EAAS,QAAQH,EAAS,UAAU,CAEvC,OAAQe,EAAP,CACAC,EAAiBD,CAAK,CACvB,CACH,CAOA,eAAeT,EAAyBH,EAAU,CAChD,GAAI,EACU,MAAMU,EAAc,EAAEL,CAAW,GACrC,WAAaA,EAAcD,IACjCJ,EAAS,UAAUH,EAAS,UAAU,EACtCc,EAAS,KAAK,CACZ,MAAO,OACP,SAAU,WACV,QAAS,4DACjB,CAAO,EAEJ,OAAQC,EAAP,CACAC,EAAiBD,CAAK,CACvB,CACH,CAMA,eAAeF,EAAcjB,EAAO,EAAG,CACrCY,EAAcZ,EACd,KAAM,CAAE,KAAMqB,CAAU,EAAG,MAAMvB,EAAawB,EAAStB,CAAI,CAAC,EAC5D,OAAIqB,EAAS,KAAK,OAAS,IACzBE,EAAaF,EAAS,IAAI,EAC1BG,KAEKH,CACT,CAKA,SAASG,GAAwB,CAC/BnB,EAAS,QAAO,CAClB,CAOA,SAASkB,EAAaE,EAAQ,CAC5BrB,EAAS,QAAQ,mBACf,YACAqB,EAAO,IAAIC,CAAgB,EAAE,KAAK,EAAE,CACxC,CACA,CAMA,SAASX,GAAe,CACtBX,EAAS,QAAQ,UAAY,GAC7BG,EAAS,UAAUH,EAAS,UAAU,CACxC,CAOA,SAASkB,EAAStB,EAAO,EAAG,CAC1B,MAAO,CACL,MAAOI,EAAS,WAAW,SAAS,YAAY,MAChD,KAAAJ,EACA,SAAUW,CACd,CACA,CAMA,SAASS,EAAiBD,EAAO,CAC/B,QAAQ,IAAIA,CAAK,EACjBD,EAAS,MAAM,CACb,MAAO,QACP,SAAU,WACV,QAASC,EAAM,OACnB,CAAG,CACH,CAOA,SAASO,EAAiB,CACxB,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACF,EAAG,CACD,MAAO;AAAA,0CACiCL;AAAA,6CACGD,WAAsBE;AAAA;AAAA;AAAA,kCAGjCC;AAAA;AAAA;AAAA,8BAGJC;AAAA;AAAA;AAAA,qCAGOC;AAAA;AAAA;AAAA,sCAGCC;AAAA;AAAA;AAAA,WAItC"}